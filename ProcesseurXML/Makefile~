COMP = g++
EDL = g++
ECHO = echo
RM = rm

ALL = All
TEST = test
COMMUN = commun
EFFACE = clean
LIBS = $(PATH_LIB)

SRC =   $(wildcard ./*.cpp) $(wildcard ./models/*.cpp)
OBJETS =   $(SRC:.o=.cpp)

# $(wildcard ./*.l)
# $(wildcard ./*.y)
	# g++ -std=c++11 -g -DYYDEBUG -o xmltool main.cpp xml.tab.c lex.xml.c

${ALL}:${COMMUN}
${COMMUN}:${OBJETS} xml.l xml.y
	flex -P xml xml.l
	bison -p xml --debug --verbose --defines=xml.tab.h xml.y
	${COMP} -c xml.tab.c
	${COMP} -c lex.xml.c
	${EDL} -std=c++11 -g -DYYDEBUG -o xmltool ${OBJETS} 
	touch commun
${EFFACE}:
	${RM} -rf xml.tab.c lex.xml.c xml.tab.h xml.output xmltool commun
${TEST}:
	cd Tests; ./mktest.sh

#./models/Balise.o : ./models/Balise.cpp ./models/Balise.h

%.o:%.cpp 
	${COMP} -c $<

# all: commun
# commun: *.l *.y *.cpp *.h
# 	flex -P xml xml.l
# 	bison -p xml --debug --verbose --defines=xml.tab.h xml.y
# 	g++ -std=c++11 -g -DYYDEBUG -o xmltool main.cpp xml.tab.c lex.xml.c
# 	touch commun
# clean:
# 	-rm -rf xml.tab.c lex.xml.c xml.tab.h xml.output xmltool commun
# test:
# 	cd Tests; ./mktest.sh
